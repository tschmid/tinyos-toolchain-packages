--- tcl/board/atmel_sam3s_ek.cfg	2011-01-25 07:15:27.000000000 -0800
+++ tcl/board/atmel_sam3s_ek.cfg.fixed	2011-01-25 07:26:44.204007222 -0800
@@ -1,3 +1,5 @@
+adapter_khz 1000
+
 source [find target/at91sam3sXX.cfg]
 
 $_TARGETNAME configure -event gdb-attach { reset init }
--- src/target/armv7m.c
+++ src/target/armv7m.c
@@ -254,7 +254,7 @@ int armv7m_get_gdb_reg_list(struct target *target, struct reg **reg_list[], int
 	struct armv7m_common *armv7m = target_to_armv7m(target);
 	int i;
 
-	*reg_list_size = 26;
+	*reg_list_size = 17;
 	*reg_list = malloc(sizeof(struct reg*) * (*reg_list_size));
 
 	/*
@@ -264,26 +264,11 @@ int armv7m_get_gdb_reg_list(struct target *target, struct reg **reg_list[], int
 	 *  - (obsolete) FPA status
 	 *  - CPSR
 	 */
-	for (i = 0; i < 16; i++)
+	for (i = 0; i < 17; i++)
 	{
 		(*reg_list)[i] = &armv7m->core_cache->reg_list[i];
 	}
 
-	for (i = 16; i < 24; i++)
-		(*reg_list)[i] = &arm_gdb_dummy_fp_reg;
-	(*reg_list)[24] = &arm_gdb_dummy_fps_reg;
-
-#ifdef ARMV7_GDB_HACKS
-	/* use dummy cpsr reg otherwise gdb may try and set the thumb bit */
-	(*reg_list)[25] = &armv7m_gdb_dummy_cpsr_reg;
-
-	/* ARMV7M is always in thumb mode, try to make GDB understand this
-	 * if it does not support this arch */
-	*((char*)armv7m->arm.pc->value) |= 1;
-#else
-	(*reg_list)[25] = &armv7m->core_cache->reg_list[ARMV7M_xPSR];
-#endif
-
 	return ERROR_OK;
 }
 
--- src/target/armv7m.h
+++ src/target/armv7m.h
@@ -30,7 +30,7 @@
 #include "arm.h"
 
 /* define for enabling armv7 gdb workarounds */
-#if 1
+#if 0
 #define ARMV7_GDB_HACKS
 #endif
 
